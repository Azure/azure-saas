{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.7.4.23292",
      "templateHash": "7285554353607664512"
    }
  },
  "parameters": {
    "adminApiScopes": {
      "type": "string",
      "metadata": {
        "description": "Scopes to authorize user for the admin service."
      }
    },
    "adminApiScopeBaseUrl": {
      "type": "string",
      "metadata": {
        "description": "The base url for the app registration that the scopes belong to."
      }
    },
    "adminApiContainerImageTag": {
      "type": "string",
      "defaultValue": "ghcr.io/azure/azure-saas/asdk-admin:v1.0",
      "metadata": {
        "description": "The tag of the container image to deploy to the Admin api app service."
      }
    },
    "applicationContainerImageTag": {
      "type": "string",
      "defaultValue": "ghcr.io/azure/azure-saas/asdk-web:v1.0",
      "metadata": {
        "description": "The tag of the container image to deploy to the SaaS Application api app service."
      }
    },
    "azureAdB2cAdminApiClientIdSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C Admin Api Client Id Key Vault Secret."
      }
    },
    "azureAdB2cDomainSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C Domain Key Vault Secret."
      }
    },
    "azureAdB2cInstanceSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C Instance Key Vault Secret."
      }
    },
    "azureAdB2cSaasAppClientIdSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C SaaS App Client Id Key Vault Secret."
      }
    },
    "azureAdB2cSaasAppClientSecretSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C SaaS App Client Secret Key Vault Secret."
      }
    },
    "azureAdB2cSignupAdminClientIdSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C Signup Admin Client Id Key Vault Secret."
      }
    },
    "azureAdB2cSignupAdminClientSecretSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C Signup Admin Client Secret Key Vault Secret."
      }
    },
    "azureAdB2cTenantIdSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The value of the Azure AD B2C Tenant Id Key Vault Secret."
      }
    },
    "containerRegistryUrl": {
      "type": "string",
      "defaultValue": "https://ghcr.io",
      "metadata": {
        "description": "The URL for the container registry to pull the docker images from"
      }
    },
    "deployAdminServiceModule": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy the AdminService module. Defaults to true."
      }
    },
    "deployApplicationWebModule": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy the ApplicationWeb module. Defaults to true."
      }
    },
    "deployPermissionsServiceModule": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy the PermissionsService module. Defaults to true."
      }
    },
    "deploySignupAdminWebModule": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploy the SignupWeb module. Defaults to true."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources."
      }
    },
    "permissionsApiHostName": {
      "type": "string",
      "metadata": {
        "description": "The Host Name of the Permissions Api to point the Admin Api to."
      }
    },
    "permissionsApiCertificateSecretValue": {
      "type": "string",
      "metadata": {
        "description": "The base64 encoded certificate to save in the keyvault for securing communication with the permissions API."
      }
    },
    "permissionsApiCertificatePassphraseSecretValue": {
      "type": "secureString",
      "metadata": {
        "description": "The passphrase fopr the  certificate to save in the keyvault for securing communication with the permissions API."
      }
    },
    "saasAppApiScopes": {
      "type": "string",
      "metadata": {
        "description": "Scopes to authorize SaaS App user for the admin service."
      }
    },
    "signupAdminContainerImageTag": {
      "type": "string",
      "defaultValue": "ghcr.io/azure/azure-saas/asdk-signup:v1.0",
      "metadata": {
        "description": "The tag of the container image to deploy to the SignupAdmin app service."
      }
    },
    "saasProviderName": {
      "type": "string",
      "metadata": {
        "description": "The SaaS Provider name."
      }
    },
    "saasEnvironment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "prd",
        "stg",
        "dev",
        "tst"
      ],
      "metadata": {
        "description": "The deployment environment (e.g. prd, dev, tst)."
      }
    },
    "saasInstanceNumber": {
      "type": "string",
      "maxLength": 3,
      "minLength": 1,
      "metadata": {
        "description": "The instance number of the deployment."
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server administrator login."
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "secureString",
      "metadata": {
        "description": "The SQL Server administrator login password."
      }
    }
  },
  "variables": {
    "adminApiName": "[replace(format('api-admin-{0}-{1}', parameters('saasProviderName'), parameters('saasEnvironment')), '-', '')]",
    "adminSqlDatabaseName": "[format('sqldb-admin-{0}-{1}-{2}', parameters('saasProviderName'), parameters('saasEnvironment'), parameters('saasInstanceNumber'))]",
    "adminSqlServerName": "[format('sql-admin-{0}-{1}-{2}', parameters('saasProviderName'), parameters('saasEnvironment'), parameters('saasInstanceNumber'))]",
    "applicationAppServiceName": "[replace(format('app-application-{0}-{1}', parameters('saasProviderName'), parameters('saasEnvironment')), '-', '')]",
    "appServicePlanName": "[format('plan-{0}-{1}-{2}', parameters('saasProviderName'), parameters('saasEnvironment'), parameters('saasInstanceNumber'))]",
    "keyVaultName": "[format('kv-{0}-{1}-{2}', parameters('saasProviderName'), parameters('saasEnvironment'), parameters('saasInstanceNumber'))]",
    "logicAppName": "[format('logic-{0}-{1}-{2}', parameters('saasProviderName'), parameters('saasEnvironment'), parameters('saasInstanceNumber'))]",
    "signupAdminAppServiceName": "[replace(format('app-signup-{0}-{1}', parameters('saasProviderName'), parameters('saasEnvironment')), '-', '')]",
    "modulesToDeploy": {
      "adminService": "[parameters('deployAdminServiceModule')]",
      "applicationWeb": "[parameters('deployApplicationWebModule')]",
      "permissionsService": "[parameters('deployPermissionsServiceModule')]",
      "signupAdminWeb": "[parameters('deploySignupAdminWebModule')]"
    },
    "messageToUpdate": "UPDATE THIS AFTER DEPLOYMENT"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appServicePlanDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "15590660116437762573"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "appServicePlanName": {
              "type": "string",
              "metadata": {
                "description": "The App Service Plan name."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-01-15",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "linux",
              "sku": {
                "name": "S1"
              },
              "properties": {
                "reserved": true
              }
            }
          ],
          "outputs": {
            "appServicePlanId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "logicAppDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logicAppName": {
            "value": "[variables('logicAppName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "1702688739756527850"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "logicAppName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Logic App."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[parameters('logicAppName')]",
              "location": "[parameters('location')]",
              "properties": {
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {},
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http",
                      "inputs": {
                        "schema": {
                          "properties": {
                            "HTML": {
                              "type": "string"
                            },
                            "emailFrom": {
                              "type": "string"
                            },
                            "emailTo": {
                              "type": "string"
                            },
                            "emailToName": {
                              "type": "string"
                            },
                            "subject": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "actions": {
                    "Response": {
                      "runAfter": {},
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "body": "@triggerBody()?['HTML']",
                        "statusCode": 200
                      }
                    }
                  },
                  "outputs": {}
                }
              }
            }
          ],
          "outputs": {
            "logicAppCallbackURL": {
              "type": "string",
              "value": "[listCallbackURL(format('{0}/triggers/manual', resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))), '2019-05-01').value]"
            }
          }
        }
      }
    },
    {
      "condition": "[variables('modulesToDeploy').adminService]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "adminSqlDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminSqlDatabaseName": {
            "value": "[variables('adminSqlDatabaseName')]"
          },
          "adminSqlServerName": {
            "value": "[variables('adminSqlServerName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlAdministratorLogin": {
            "value": "[parameters('sqlAdministratorLogin')]"
          },
          "sqlAdministratorLoginPassword": {
            "value": "[parameters('sqlAdministratorLoginPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "9206951299448798428"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "sqlAdministratorLogin": {
              "type": "string",
              "metadata": {
                "description": "The SQL Server administrator login."
              }
            },
            "sqlAdministratorLoginPassword": {
              "type": "secureString",
              "metadata": {
                "description": "The SQL Server administrator login password."
              }
            },
            "adminSqlServerName": {
              "type": "string",
              "metadata": {
                "description": "The Admin SQL Server name."
              }
            },
            "adminSqlDatabaseName": {
              "type": "string",
              "metadata": {
                "description": "The Admin SQL Database name."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2021-02-01-preview",
              "name": "[parameters('adminSqlServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "version": "12.0"
              }
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('adminSqlServerName'), 'AllowAllWindowsAzureIps')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('adminSqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2021-02-01-preview",
              "name": "[format('{0}/{1}', parameters('adminSqlServerName'), parameters('adminSqlDatabaseName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('adminSqlServerName'))]"
              ]
            }
          ],
          "outputs": {
            "adminSqlServerFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('adminSqlServerName'))).fullyQualifiedDomainName]"
            },
            "adminSqlDatabaseConnectionString": {
              "type": "string",
              "value": "[format('Data Source=tcp:{0},1433;Initial Catalog={1};User Id={2}@{3};Password={4};', reference(resourceId('Microsoft.Sql/servers', parameters('adminSqlServerName'))).fullyQualifiedDomainName, parameters('adminSqlDatabaseName'), parameters('sqlAdministratorLogin'), reference(resourceId('Microsoft.Sql/servers', parameters('adminSqlServerName'))).fullyQualifiedDomainName, parameters('sqlAdministratorLoginPassword'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVaultDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminSqlConnectionStringSecretValue": {
            "value": "[if(variables('modulesToDeploy').adminService, reference(resourceId('Microsoft.Resources/deployments', 'adminSqlDeployment'), '2020-10-01').outputs.adminSqlDatabaseConnectionString.value, '')]"
          },
          "azureAdB2cAdminApiClientIdSecretValue": {
            "value": "[parameters('azureAdB2cAdminApiClientIdSecretValue')]"
          },
          "azureAdB2cDomainSecretValue": {
            "value": "[parameters('azureAdB2cDomainSecretValue')]"
          },
          "azureAdB2cInstanceSecretValue": {
            "value": "[parameters('azureAdB2cInstanceSecretValue')]"
          },
          "azureAdB2cSaasAppClientIdSecretValue": {
            "value": "[parameters('azureAdB2cSaasAppClientIdSecretValue')]"
          },
          "azureAdB2cSaasAppClientSecretSecretValue": {
            "value": "[parameters('azureAdB2cSaasAppClientSecretSecretValue')]"
          },
          "azureAdB2cSignupAdminClientIdSecretValue": {
            "value": "[parameters('azureAdB2cSignupAdminClientIdSecretValue')]"
          },
          "azureAdB2cSignupAdminClientSecretSecretValue": {
            "value": "[parameters('azureAdB2cSignupAdminClientSecretSecretValue')]"
          },
          "azureAdB2cTenantIdSecretValue": {
            "value": "[parameters('azureAdB2cTenantIdSecretValue')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "permissionsApiCertificateSecretValue": {
            "value": "[parameters('permissionsApiCertificateSecretValue')]"
          },
          "permissionsApiCertificatePassphraseSecretValue": {
            "value": "[parameters('permissionsApiCertificatePassphraseSecretValue')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "10345434415902719005"
            }
          },
          "parameters": {
            "adminSqlConnectionStringSecretName": {
              "type": "string",
              "defaultValue": "admin-ConnectionStrings--TenantsContext",
              "metadata": {
                "description": "The name of the Admin SQL Connection String Key Vault Secret."
              }
            },
            "adminSqlConnectionStringSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Admin SQL Connection String Key Vault Secret."
              }
            },
            "azureAdB2cAdminApiClientIdSecretName": {
              "type": "string",
              "defaultValue": "admin-AzureAdB2C--ClientId",
              "metadata": {
                "description": "The name of the Azure AD B2C Admin Api Client Id Key Vault Secret."
              }
            },
            "azureAdB2cAdminApiClientIdSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C Admin Api Client Id Key Vault Secret."
              }
            },
            "azureAdB2cAdminApiDomainSecretName": {
              "type": "string",
              "defaultValue": "admin-AzureAdB2C--Domain",
              "metadata": {
                "description": "The name of the Azure AD B2C Domain Key Vault Secret for the Admin Api."
              }
            },
            "azureAdB2cSignupAdminDomainSecretName": {
              "type": "string",
              "defaultValue": "signupadmin-AzureAdB2C--Domain",
              "metadata": {
                "description": "The name of the Azure AD B2C Domain Key Vault Secret for the SignupAdmin Site."
              }
            },
            "azureAdB2cDomainSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C Domain Key Vault Secret."
              }
            },
            "azureAdB2cSaasAppClientIdSecretName": {
              "type": "string",
              "defaultValue": "saasapplication-AzureAdB2C--ClientId",
              "metadata": {
                "description": "The name of the Azure AD B2C SaaS App Client Id Key Vault Secret."
              }
            },
            "azureAdB2cSaasAppClientIdSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C SaaS App Client Id Key Vault Secret."
              }
            },
            "azureAdB2cSaasAppClientSecretSecretName": {
              "type": "string",
              "defaultValue": "saasapplication-AzureAdB2C--ClientSecret",
              "metadata": {
                "description": "The name of the Azure AD B2C SaaS App Client Secret Key Vault Secret."
              }
            },
            "azureAdB2cSaasAppClientSecretSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C SaaS App Client Secret Key Vault Secret."
              }
            },
            "azureAdB2cSaasAppDomainSecretName": {
              "type": "string",
              "defaultValue": "saasapplication-AzureAdB2C--Domain",
              "metadata": {
                "description": "The name of the Azure AD B2C Domain Key Vault Secret for the Saas App Site."
              }
            },
            "azureAdB2cSaasAppInstanceSecretName": {
              "type": "string",
              "defaultValue": "saasapplication-AzureAdB2C--Instance",
              "metadata": {
                "description": "The name of the Azure AD B2C Instance Key Vault Secret for the Saas App Site."
              }
            },
            "azureAdB2cSaasAppTenantIdSecretName": {
              "type": "string",
              "defaultValue": "saasapplication-AzureAdB2C--TenantId",
              "metadata": {
                "description": "The name of the Azure AD B2C Tenant Id Key Vault Secret for the SignupAdmin site."
              }
            },
            "azureAdB2cAdminApiInstanceSecretName": {
              "type": "string",
              "defaultValue": "admin-AzureAdB2C--Instance",
              "metadata": {
                "description": "The name of the Azure AD B2C Instance Key Vault Secre for the Admin Api."
              }
            },
            "azureAdB2cSignupAdminInstanceSecretName": {
              "type": "string",
              "defaultValue": "signupadmin-AzureAdB2C--Instance",
              "metadata": {
                "description": "The name of the Azure AD B2C Instance Key Vault Secret for the SignupAdmin Site."
              }
            },
            "azureAdB2cInstanceSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C Instance Key Vault Secret."
              }
            },
            "azureAdB2cSignupAdminClientIdSecretName": {
              "type": "string",
              "defaultValue": "signupadmin-AzureAdB2C--ClientId",
              "metadata": {
                "description": "The name of the Azure AD B2C Signup Admin Client Id Key Vault Secret."
              }
            },
            "azureAdB2cSignupAdminClientIdSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C Signup Admin Client Id Key Vault Secret."
              }
            },
            "azureAdB2cSignupAdminClientSecretSecretName": {
              "type": "string",
              "defaultValue": "signupadmin-AzureAdB2C--ClientSecret",
              "metadata": {
                "description": "The name of the Azure AD B2C Signup Admin Client Secret Key Vault Secret."
              }
            },
            "azureAdB2cSignupAdminClientSecretSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C Signup Admin Client Secret Key Vault Secret."
              }
            },
            "azureAdB2cAdminApiTenantIdSecretName": {
              "type": "string",
              "defaultValue": "admin-AzureAdB2C--TenantId",
              "metadata": {
                "description": "The name of the Azure AD B2C Tenant Id Key Vault Secret for the Admin Api."
              }
            },
            "azureAdB2cSignupAdminTenantIdSecretName": {
              "type": "string",
              "defaultValue": "signupadmin-AzureAdB2C--TenantId",
              "metadata": {
                "description": "The name of the Azure AD B2C Tenant Id Key Vault Secret for the SignupAdmin site."
              }
            },
            "azureAdB2cTenantIdSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Azure AD B2C Tenant Id Key Vault Secret."
              }
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "permissionsApiCertificateSecretName": {
              "type": "string",
              "defaultValue": "admin-KeyVault--PermissionsApiCert",
              "metadata": {
                "description": "The name of the Permissions Api Certificate Key Vault Secret."
              }
            },
            "permissionsApiCertificateSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Permissions Api Certificate Key Vault Secret."
              }
            },
            "permissionsApiCertificatePassphraseSecretName": {
              "type": "string",
              "defaultValue": "admin-KeyVault--PermissionsApiCertPassphrase",
              "metadata": {
                "description": "The name of the Permissions Api Certificate Passphrase Key Vault Secret."
              }
            },
            "permissionsApiCertificatePassphraseSecretValue": {
              "type": "string",
              "metadata": {
                "description": "The value of the Permissions Api Certificate Passphrase Key Vault Secret."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": false,
                "tenantId": "[subscription().tenantId]",
                "publicNetworkAccess": "enabled",
                "accessPolicies": []
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('permissionsApiCertificateSecretName'))]",
              "properties": {
                "value": "[parameters('permissionsApiCertificateSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('permissionsApiCertificatePassphraseSecretName'))]",
              "properties": {
                "value": "[parameters('permissionsApiCertificatePassphraseSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cAdminApiInstanceSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cInstanceSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSignupAdminInstanceSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cInstanceSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSaasAppClientIdSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cSaasAppClientIdSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSaasAppClientSecretSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cSaasAppClientSecretSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSaasAppDomainSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cDomainSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSaasAppInstanceSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cInstanceSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSaasAppTenantIdSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cTenantIdSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cAdminApiDomainSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cDomainSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSignupAdminDomainSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cDomainSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cAdminApiClientIdSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cAdminApiClientIdSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cAdminApiTenantIdSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cTenantIdSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSignupAdminTenantIdSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cTenantIdSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('adminSqlConnectionStringSecretName'))]",
              "properties": {
                "value": "[parameters('adminSqlConnectionStringSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSignupAdminClientIdSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cSignupAdminClientIdSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('azureAdB2cSignupAdminClientSecretSecretName'))]",
              "properties": {
                "value": "[parameters('azureAdB2cSignupAdminClientSecretSecretValue')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            }
          ],
          "outputs": {
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            },
            "keyVaultUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))).vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adminSqlDeployment')]"
      ]
    },
    {
      "condition": "[variables('modulesToDeploy').adminService]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "adminApiDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminApiName": {
            "value": "[variables('adminApiName')]"
          },
          "appServicePlanId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment')).outputs.appServicePlanId.value]"
          },
          "keyVaultUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')).outputs.keyVaultUri.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "permissionsApiHostName": {
            "value": "[parameters('permissionsApiHostName')]"
          },
          "adminApiContainerImageTag": {
            "value": "[parameters('adminApiContainerImageTag')]"
          },
          "containerRegistryUrl": {
            "value": "[parameters('containerRegistryUrl')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "10582410122468361621"
            }
          },
          "parameters": {
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "The App Service Plan ID."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "adminApiName": {
              "type": "string",
              "metadata": {
                "description": "The Admin Api name."
              }
            },
            "keyVaultUri": {
              "type": "string",
              "metadata": {
                "description": "The Uri of the Key Vault."
              }
            },
            "permissionsApiCertificateSecretName": {
              "type": "string",
              "defaultValue": "KeyVault--PermissionsApiCertName",
              "metadata": {
                "description": "The name of the Permissions Api Certificate Key Vault Secret."
              }
            },
            "permissionsApiHostName": {
              "type": "string",
              "metadata": {
                "description": "The Permissions Api host name."
              }
            },
            "containerRegistryUrl": {
              "type": "string",
              "metadata": {
                "description": "The URL for the container registry to pull the docker images from"
              }
            },
            "adminApiContainerImageTag": {
              "type": "string",
              "metadata": {
                "description": "The tag of the container image to deploy to the permissions api app service"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('adminApiName')]",
              "location": "[parameters('location')]",
              "kind": "app,linux,container",
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "httpsOnly": true,
                "siteConfig": {
                  "alwaysOn": true,
                  "linuxFxVersion": "[format('DOCKER|{0}', parameters('adminApiContainerImageTag'))]",
                  "appSettings": [
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[parameters('containerRegistryUrl')]"
                    },
                    {
                      "name": "AzureAdB2C__SignedOutCallbackPath",
                      "value": "/signout/B2C_1A_SIGNUP_SIGNIN"
                    },
                    {
                      "name": "AzureAdB2C__SignUpSignInPolicyId",
                      "value": "B2C_1A_SIGNUP_SIGNIN"
                    },
                    {
                      "name": "KeyVault__Url",
                      "value": "[parameters('keyVaultUri')]"
                    },
                    {
                      "name": "KeyVault__PermissionsApiCertName",
                      "value": "[parameters('permissionsApiCertificateSecretName')]"
                    },
                    {
                      "name": "PermissionsApi__BaseUrl",
                      "value": "[parameters('permissionsApiHostName')]"
                    },
                    {
                      "name": "Logging__LogLevel__Default",
                      "value": "Information"
                    },
                    {
                      "name": "Logging__LogLevel__Microsoft.AspNetCore",
                      "value": "Warning"
                    }
                  ]
                }
              },
              "identity": {
                "type": "SystemAssigned"
              }
            }
          ],
          "outputs": {
            "adminApiHostName": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('adminApiName'))).defaultHostName)]"
            },
            "systemAssignedManagedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('adminApiName')), '2021-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ]
    },
    {
      "condition": "[variables('modulesToDeploy').signupAdminWeb]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "signupAdminAppServiceDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminApiHostName": {
            "value": "[if(variables('modulesToDeploy').adminService, reference(resourceId('Microsoft.Resources/deployments', 'adminApiDeployment'), '2020-10-01').outputs.adminApiHostName.value, variables('messageToUpdate'))]"
          },
          "adminApiScopes": {
            "value": "[parameters('adminApiScopes')]"
          },
          "adminApiScopeBaseUrl": {
            "value": "[parameters('adminApiScopeBaseUrl')]"
          },
          "appServicePlanId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment')).outputs.appServicePlanId.value]"
          },
          "keyVaultUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')).outputs.keyVaultUri.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "signupAdminAppServiceName": {
            "value": "[variables('signupAdminAppServiceName')]"
          },
          "signupAdminApiContainerImageTag": {
            "value": "[parameters('signupAdminContainerImageTag')]"
          },
          "containerRegistryUrl": {
            "value": "[parameters('containerRegistryUrl')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "5826269692359710308"
            }
          },
          "parameters": {
            "adminApiHostName": {
              "type": "string",
              "metadata": {
                "description": "The Admin Api host name."
              }
            },
            "adminApiScopes": {
              "type": "string",
              "metadata": {
                "description": "Scopes to authorize user for the admin service."
              }
            },
            "adminApiScopeBaseUrl": {
              "type": "string",
              "metadata": {
                "description": "The base url for the app registration that the scopes belong to."
              }
            },
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "The App Service Plan ID."
              }
            },
            "keyVaultUri": {
              "type": "string",
              "metadata": {
                "description": "The Uri of the Key Vault."
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "signupAdminAppServiceName": {
              "type": "string",
              "metadata": {
                "description": "The Signup Admin App Service name."
              }
            },
            "containerRegistryUrl": {
              "type": "string",
              "metadata": {
                "description": "The URL for the container registry to pull the docker images from"
              }
            },
            "signupAdminApiContainerImageTag": {
              "type": "string",
              "metadata": {
                "description": "The tag of the container image to deploy to the permissions api app service"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('signupAdminAppServiceName')]",
              "location": "[parameters('location')]",
              "kind": "app,linux,container",
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "httpsOnly": true,
                "siteConfig": {
                  "alwaysOn": true,
                  "linuxFxVersion": "[format('DOCKER|{0}', parameters('signupAdminApiContainerImageTag'))]",
                  "appSettings": [
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[parameters('containerRegistryUrl')]"
                    },
                    {
                      "name": "AppSettings__AdminServiceBaseUrl",
                      "value": "[parameters('adminApiHostName')]"
                    },
                    {
                      "name": "AppSettings__AdminServiceScopeBaseUrl",
                      "value": "[parameters('adminApiScopeBaseUrl')]"
                    },
                    {
                      "name": "AppSettings__AdminServiceScopes",
                      "value": "[parameters('adminApiScopes')]"
                    },
                    {
                      "name": "AzureAdB2C__SignedOutCallbackPath",
                      "value": "/signout/B2C_1A_SIGNUP_SIGNIN"
                    },
                    {
                      "name": "AzureAdB2C__SignUpSignInPolicyId",
                      "value": "B2C_1A_SIGNUP_SIGNIN"
                    },
                    {
                      "name": "KeyVault__Url",
                      "value": "[parameters('keyVaultUri')]"
                    },
                    {
                      "name": "Logging__LogLevel__Default",
                      "value": "Information"
                    },
                    {
                      "name": "Logging__LogLevel__Microsoft.AspNetCore",
                      "value": "Warning"
                    }
                  ]
                }
              },
              "identity": {
                "type": "SystemAssigned"
              }
            }
          ],
          "outputs": {
            "signupAdminAppServiceHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('signupAdminAppServiceName'))).defaultHostName]"
            },
            "systemAssignedManagedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('signupAdminAppServiceName')), '2021-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adminApiDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ]
    },
    {
      "condition": "[variables('modulesToDeploy').applicationWeb]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "applicationAppServiceDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminApiHostName": {
            "value": "[if(variables('modulesToDeploy').adminService, reference(resourceId('Microsoft.Resources/deployments', 'adminApiDeployment'), '2020-10-01').outputs.adminApiHostName.value, variables('messageToUpdate'))]"
          },
          "saasAppApiScopes": {
            "value": "[parameters('saasAppApiScopes')]"
          },
          "adminApiScopeBaseUrl": {
            "value": "[parameters('adminApiScopeBaseUrl')]"
          },
          "applicationAppServiceName": {
            "value": "[variables('applicationAppServiceName')]"
          },
          "appServicePlanId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment')).outputs.appServicePlanId.value]"
          },
          "keyVaultUri": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')).outputs.keyVaultUri.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "applicationApiContainerImageTag": {
            "value": "[parameters('applicationContainerImageTag')]"
          },
          "containerRegistryUrl": {
            "value": "[parameters('containerRegistryUrl')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "13957793124538660249"
            }
          },
          "parameters": {
            "appServicePlanId": {
              "type": "string",
              "metadata": {
                "description": "The App Service Plan ID."
              }
            },
            "adminApiHostName": {
              "type": "string",
              "metadata": {
                "description": "The Admin Api host name."
              }
            },
            "saasAppApiScopes": {
              "type": "string",
              "metadata": {
                "description": "Scopes to authorize user for the admin service."
              }
            },
            "adminApiScopeBaseUrl": {
              "type": "string",
              "metadata": {
                "description": "The base url for the app registration that the scopes belong to."
              }
            },
            "keyVaultUri": {
              "type": "string",
              "metadata": {
                "description": "The URL for the keyvault that contains the application secrets"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for all resources."
              }
            },
            "applicationAppServiceName": {
              "type": "string",
              "metadata": {
                "description": "The Application App Service name."
              }
            },
            "containerRegistryUrl": {
              "type": "string",
              "metadata": {
                "description": "The URL for the container registry to pull the docker images from"
              }
            },
            "applicationApiContainerImageTag": {
              "type": "string",
              "metadata": {
                "description": "The tag of the container image to deploy to the permissions api app service"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-03-01",
              "name": "[parameters('applicationAppServiceName')]",
              "location": "[parameters('location')]",
              "kind": "app,linux,container",
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "httpsOnly": true,
                "siteConfig": {
                  "alwaysOn": true,
                  "linuxFxVersion": "[format('DOCKER|{0}', parameters('applicationApiContainerImageTag'))]",
                  "appSettings": [
                    {
                      "name": "AppSettings__AdminServiceBaseUrl",
                      "value": "[parameters('adminApiHostName')]"
                    },
                    {
                      "name": "AppSettings__AdminServiceScopeBaseUrl",
                      "value": "[parameters('adminApiScopeBaseUrl')]"
                    },
                    {
                      "name": "AppSettings__AdminServiceScopes",
                      "value": "[parameters('saasAppApiScopes')]"
                    },
                    {
                      "name": "AzureAdB2C__SignedOutCallbackPath",
                      "value": "/signout/B2C_1A_SIGNUP_SIGNIN"
                    },
                    {
                      "name": "AzureAdB2C__SignUpSignInPolicyId",
                      "value": "B2C_1A_SIGNUP_SIGNIN"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[parameters('containerRegistryUrl')]"
                    },
                    {
                      "name": "KeyVault__Url",
                      "value": "[parameters('keyVaultUri')]"
                    },
                    {
                      "name": "Logging__LogLevel__Default",
                      "value": "Information"
                    },
                    {
                      "name": "Logging__LogLevel__Microsoft",
                      "value": "Warning"
                    },
                    {
                      "name": "Logging__LogLevel__Microsoft.Hosting.Lifetime",
                      "value": "Information"
                    }
                  ]
                }
              },
              "identity": {
                "type": "SystemAssigned"
              }
            }
          ],
          "outputs": {
            "applicationAppServiceHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('applicationAppServiceName'))).defaultHostName]"
            },
            "systemAssignedManagedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('applicationAppServiceName')), '2021-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adminApiDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'appServicePlanDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVaultAccessPolicyDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminApiPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'adminApiDeployment'), '2020-10-01').outputs.systemAssignedManagedIdentityPrincipalId.value]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "modulesToDeploy": {
            "value": "[variables('modulesToDeploy')]"
          },
          "applicationAppServicePrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationAppServiceDeployment'), '2020-10-01').outputs.systemAssignedManagedIdentityPrincipalId.value]"
          },
          "signupAdminAppServicePrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'signupAdminAppServiceDeployment'), '2020-10-01').outputs.systemAssignedManagedIdentityPrincipalId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.7.4.23292",
              "templateHash": "14406250937121354174"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Key Vault."
              }
            },
            "adminApiPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "The Principal Id of the Admin Api System Assigned Managed Identity."
              }
            },
            "modulesToDeploy": {
              "type": "object",
              "metadata": {
                "description": "The ASDK modules to deploy."
              }
            },
            "signupAdminAppServicePrincipalId": {
              "type": "string",
              "metadata": {
                "description": "The Principal Id of the Signup Admin App Service System Assigned Managed Identity."
              }
            },
            "applicationAppServicePrincipalId": {
              "type": "string",
              "metadata": {
                "description": "The Principal Id of the Saas App Service System Assigned Managed Identity."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
              "properties": {
                "accessPolicies": [
                  "[if(parameters('modulesToDeploy').adminService, createObject('objectId', parameters('adminApiPrincipalId'), 'tenantId', subscription().tenantId, 'permissions', createObject('secrets', createArray('get', 'list'))), createObject())]",
                  "[if(parameters('modulesToDeploy').signupAdminWeb, createObject('objectId', parameters('signupAdminAppServicePrincipalId'), 'tenantId', subscription().tenantId, 'permissions', createObject('secrets', createArray('get', 'list'))), createObject())]",
                  "[if(parameters('modulesToDeploy').applicationWeb, createObject('objectId', parameters('applicationAppServicePrincipalId'), 'tenantId', subscription().tenantId, 'permissions', createObject('secrets', createArray('get', 'list'))), createObject())]"
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'adminApiDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'applicationAppServiceDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'signupAdminAppServiceDeployment')]"
      ]
    }
  ]
}